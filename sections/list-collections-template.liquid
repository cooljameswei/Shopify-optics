<link rel="stylesheet" href='https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap'>
<div class="brands-page">
  <div class="brands-list-wrap">
    <div class="page-width">
      <ul class="azbrandstable">
        <li class="all-brand active">
          <a href="javascript:void(0)">All</a>
        </li>
        {% assign array = "A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z" | split: "|" %}
        {% for item in array %} 
        <li class="vendor-letter">
          <a href="javascript:void(0)">
            {{ item }}
          </a>
        </li>
        {% endfor %}
      </ul>  
    </div>
  </div>
{% if section.settings.layout == 'grid' or section.settings.layout == 'title' %}
  {% if section.settings.display_type == 'all' %}
    {%- assign collection_count = 0 -%}
	  {% for link in linklists.all-collections.links %}
{% assign collection = link.object %}
      {% unless collection.handle == 'frontpage' %}
        {%- assign collection_count = collection_count | plus: 1 -%}
      {% endunless %}
    {% endfor %} 
  {% else %}
    {%- assign collection_count = section.blocks.size -%}
  {% endif %}

  {% assign number_rows = 1 %} 

  {% case collection_count %}
    {% when 1 %}
      {% assign grid_item_width = 'medium-up--one-half' %}
      {% assign height = 450 %}
    {% when 2 %}
      {% assign grid_item_width = 'medium-up--one-half' %}
      {% assign height = 450 %}
    {% when 3 %}
      {% assign grid_item_width = 'medium-up--one-third' %}
      {% assign height = 330 %}
    {% when 4 %}
      {% assign grid_item_width = 'medium-up--one-quarter' %}
      {% assign height = 235 %}
    {% else %}
      {% assign grid_item_width = 'medium-up--one-third' %}
      {% assign height = 330 %}
      {% assign number_rows = collection_count | divided_by: 3.0 | ceil %}
  {% endcase %}
{% endif %}

<div class="page-width" data-section-id="{{ section.id }}" data-section-type="collections-list">
  {% if section.settings.display_type == 'all' %}
    {% case section.settings.sort %}
      {% when 'products_high' or 'products_low' %}
        {%- assign list_collections = collections | sort: 'all_products_count' -%}
      {% when 'date' or 'date_reversed' %}
        {%- assign list_collections = collections | sort: 'published_at' -%}
      {% else %}
        {%- assign list_collections = collections -%}
    {% endcase %}
    {% if section.settings.sort == 'products_low' or section.settings.sort == 'date' or section.settings.sort == 'alphabetical' %}
      <div class="grid grid--no-gutters grid--uniform collection brand-list-wrap" data-number-rows="{{ number_rows }}">
        {% assign row_number = 1 %}
        {% if section.settings.layout == 'title' %}
          {% assign letters = "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z" | split: ' ' %}
          {% for letter in letters %}
        	{% assign listExists = false %}
        	{% for link in linklists.all-collections.links %}
                  {% assign collection = link.object %}
                  {%- assign featured_collection = collection -%}
                  {% unless collection.handle == 'frontpage' %}
                    {% for i in featured_collection.title %}
                    {% assign j = i | first %}
                      {% if j == letter %}
        				{% assign listExists = true %}
                      {% endif %}
                    {% endfor %}		
                  {% endunless %}
        		  {% if listExists %}
        		    {% break %}
        		  {% endif %}
            {% endfor %}
        	{% if listExists %}
        	<div class="brands-item brand-letter-{{letter | downcase}}">
              <div class="brands-alpha-wrapper">
                <div class="alpha-title">{{ letter }}</div>    
              </div>
              <div class="brands-title-wrapper clearfix">      
                 {% for link in linklists.all-collections.links %}
                  {% assign collection = link.object %}
                  {%- assign featured_collection = collection -%}
                  {% unless collection.handle == 'frontpage' %}
                    {% for i in featured_collection.title %}
                    {% assign j = i | first %}
                      {% if j == letter %}
                        {% include 'collection-title-item' %} 
                      {% endif %}
                    {% endfor %}				
                  {% endunless %}
                {% endfor %}
                </div>
              </div>
        	{% endif %}
        	{% endfor %}               
        
        {% else %}
            {% for link in linklists.all-collections.links %}
{% assign collection = link.object %}
            {%- assign featured_collection = collection -%}
            {% unless collection.handle == 'frontpage' %}
              {% if section.settings.layout == 'list' %}
                {% include 'collection-list-item' %}
              {% else %}
                {% if collection_count > 4 and forloop.index > 3 %}
                  {% assign row_number = forloop.index | divided_by: 3.0 | ceil %}
                {% endif %}
                {% include 'collection-grid-item' with stretch_collection_image: false, height: height %}
              {% endif %}
            {% endunless %}
          {% endfor %}
        {% endif %}
      </div>
    {% else %}
      <div class="grid grid--no-gutters grid--uniform collection" data-number-rows="{{ number_rows }}">
        {% assign row_number = 1 %}
        {% for collection in list_collections reversed %}
          {%- assign featured_collection = collection -%}
          {% unless collection.handle == 'frontpage' %}
            {% if section.settings.layout == 'list' %}
              {% include 'collection-list-item' %}
            {% else %}
              {% if collection_count > 4 and forloop.index > 3 %}
                {% assign row_number = forloop.index | divided_by: 3.0 | ceil %}
              {% endif %}
              {% include 'collection-grid-item' with stretch_collection_image: false, height: height %}
            {% endif %}
          {% endunless %}
        {% endfor %}
      </div>
    {% endif %}
  {% else %}
    <div class="grid grid--no-gutters grid--uniform collection" data-number-rows="{{ number_rows }}">
      {% assign row_number = 1 %}
      {% for block in section.blocks %}
        {%- assign featured_collection = collections[block.settings.collection] -%}
        {% if section.settings.layout == 'list' %}
          {% include 'collection-list-item' %}
        {% else %}
          {% if collection_count > 4 and forloop.index > 3 %}
            {% assign row_number = forloop.index | divided_by: 3.0 | ceil %}
          {% endif %}
          {% include 'collection-grid-item' with stretch_collection_image: false, height: height %}
        {% endif %}
      {% endfor %}
    </div>
  {% endif %}
</div>
    </div>

<style>
  .grid__item {
    float: left;
    padding-left: 20px;
    width: 100%;
    -ms-flex-preferred-size: auto!important;
    -webkit-flex-basis: auto!important;
    -moz-flex-basis: auto!important;
    flex-basis: auto!important;
  }
  .grid--uniform .medium-up--one-third:nth-child(3n+1){
    clear: none;
  }
  .wrapper--bottom {
    padding: 0;
  }
  .grid {
    list-style: none;
    margin: 0;
    display: block;
    padding: 0;
    margin-left: -20px;
  }
 .brands-page p {
    margin: 0 0 10px;
  }
 .brands-page p:last-child {
    margin-bottom: 0;
  }
  .grid--no-gutters {
    margin-left: 0;
  }
  .brands-page p, .brands-page span {
    color: #333;
  }
  .page-width {
    /*------As per the new requiremnet TW#33265426-----*/
    max-width: 1350px;
    margin: 0 auto;
    padding: 0 10px;
  }
  .brands-list-wrap {
    font-size: 20px;
    font-weight: 500;
    overflow: hidden;
    font-stretch: normal;
    font-style: normal;
    line-height: normal;
    position: relative;
    letter-spacing: 4px;
    text-align: center;
    color: #333333;
    margin-bottom: 68px;
    box-shadow: 0 2px 4px 0 #f3f3f3;
  }
  .brands-page {
    margin-top: 30px;
    margin-bottom: 30px;
    padding-bottom: 30px;
  }
  .brands-page .grid__item p {
    line-height: 1.59;
  }
  .brands-list-wrap ul {
    list-style: none;
    display: flex;
    padding: 0;
    margin: 0;
    justify-content: center;
    flex-wrap: wrap;
    position: relative;
  }

  .brands-list-wrap ul li.active a {
    color: #cf4247;
  }

  .brands-list-wrap a {
    color: inherit;
  }

  .brands-list-wrap a {
    display: inline-block;
    padding: 14px 12px 14px;
  }

  .brands-item .collection__title {
    margin: 0;
  }

  .brands-title-wrapper {
    font-size: 22px;
    font-weight: normal;
    font-stretch: normal;
    font-style: normal;
    line-height: 1.59;
    letter-spacing: normal;
    color: #333333;
    border-top: 1px solid #000;
    width: calc(100% - 62px);
    padding: 40px 0 40px 20px;
  }
  .brands-title-wrapper a {
     color: #333 !important;
  }
  .brands-list-wrap ul li {
    background: none;
  }
  .brands-title-wrapper .grid__item.medium-up--one-third {
    width: 25%;
  }
  .brands-item.b-hide{
    display:none
  }
  .brands-item,
  .brands-item.b-show{
    display: flex;
  }

  .alpha-title {
    font-size: 40px;
    font-weight: normal;
    font-stretch: normal;
    font-style: normal;
    position: relative;
    top: -27px;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    color: #333333;
  }

  .brands-page * {
    font-family: IBM Plex Sans;
  }
  .brands-alpha-wrapper {
    margin-right: 33px;
  }

  .template-list-collections main#MainContent {
    margin-top: 30px;
    padding-bottom: 30px;
  }

  .brands-list-wrap:before {
    content: "";
    position: absolute;
    left: -7px;
    background: #fff;
    height: 51px;
    display: block;
    width: 120%;
    top: 0;
  }
  @media only screen and (min-width: 750px){
    .page-width {
      padding: 0 20px;
    }
    .medium-up--one-third {
      width: 33.33333%;
      -ms-flex-preferred-size: 33.33333%;
      -webkit-flex-basis: 33.33333%;
      -moz-flex-basis: 33.33333%;
      flex-basis: 33.33333%;
    }
  }
  @media (max-width:767px){
    .brands-list-wrap a {
      padding: 0 5px;
    }
    .brands-page {
      margin-top: 15px;
      margin-bottom: 0;
    }
    .brands-list-wrap {
      font-size: 18px;
      letter-spacing: 0.9px;
      color: #8e8e8e;
      box-shadow: 0 2px 4px 0 #8e8e8e;
      padding: 13px 0;
      margin-bottom: 50px;
    }

    .template-list-collections main#MainContent {
      margin-top: 15px;
    }

    .brands-list-wrap:before {
      height: 100%;
      top: 4px;
    }

    #shopify-section-list-collections-template .medium-up--one-third {
      padding-left: 0;
    }

    .brands-title-wrapper {
      padding: 55px 0 55px 20px;
      padding-left: 3px;
    }
    .brands-item.b-show  .alpha-title {
      color: #c63b3d;
    }
    .brand-list-wrap {
      padding: 0 25px;
    }
    .brands-item:last-child .brands-title-wrapper {
      padding-bottom: 0px;
    }

    .brand-list-wrap {
      margin-bottom: 0;
    }
    .brands-alpha-wrapper {
      margin-right: 27px;
    }
  }
  @media only screen and (max-width: 749px){
    #shopify-section-list-collections-template .medium-up--one-third {
      width: 100%;
      padding-left: 20px;
    }
  }
</style>

<script>
  $('.brands-list-wrap ul').on('click','a',function(){
    let t = $(this).text().toLowerCase().trim();
    $(this).parent().addClass('active').siblings().removeClass('active')
    if(t =='all'){
      $('.brands-item').addClass('b-show').removeClass('b-hide');
    }
    else{
      $('.brands-item').addClass('b-hide').removeClass('b-show');
      $('.brand-letter-'+t+'').removeClass('b-hide').addClass('b-show');
      console.log( $('.brand-letter-'+t+''))
    }
  })
</script>

{% schema %}
  {
    "name": "Collections list page",
    "settings": [
      {
        "type": "paragraph",
        "content": "All of your collections are listed by default. To customize your list, choose 'Selected' and add collections."
      },
      {
        "type": "radio",
        "id": "display_type",
        "label": "Select collections to show",
        "default": "all",
        "options": [
          {
            "value": "all",
            "label": "All"
          },
          {
            "value": "selected",
            "label": "Selected"
          }
        ]
      },
      {
        "type": "select",
        "id": "layout",
        "label": "Select layout",
        "default": "grid",
        "options": [
          {
            "value": "grid",
            "label": "Grid"
          },
          {
            "value": "list",
            "label": "List"
          },
          {
			"value": "title",
			"label": "Title"
          }
        ]
      },
      {
        "type": "select",
        "id": "sort",
        "label": "Sort collections by:",
        "info": "Sorting only applies when 'All' is selected",
        "default": "alphabetical",
        "options": [
          {
            "value": "products_high",
            "label": "Product count, high to low"
          },
          {
            "value": "products_low",
            "label": "Product count, low to high"
          },
          {
            "value": "alphabetical",
            "label": "Alphabetically, A-Z"
          },
          {
            "value": "alphabetical_reversed",
            "label": "Alphabetically, Z-A"
          },
          {
            "value": "date",
            "label": "Date, old to new"
          },
          {
            "value": "date_reversed",
            "label": "Date, new to old"
          }
        ]
      }
    ],
    "blocks": [
      {
        "type": "collection",
        "name": "Collection",
        "settings": [
          {
            "label": "Collection",
            "id": "collection",
            "type": "collection"
          }
        ]
      }
    ]
  }
{% endschema %}
