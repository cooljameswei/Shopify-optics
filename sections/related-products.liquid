<style>
  .related-products__section{
    background-color: #ffffff !important;
  }
  .related-products__section .main-content{
      margin-top: 0 !important;
      padding-bottom: 0 !important;
  }
  
  @media only screen and (min-width: 750px) {
    .main-content{
      padding-bottom: 0 !important;
    }
  }
  .related-products-con{
    margin-top:0;
    background-color: #ffffff !important;
  }
  .related-products__section .section-header {
    margin-bottom: 0;
  }
</style>
{% if section.settings.show_related_products == true %}
<div class="main-content">
  <div class="related-products-con product-template__container page-width" id="ProductSection-{{ section.id }}" data-section-id="{{ section.id }}" data-section-type="related-products" data-enable-history-state="true">
  
  {% comment %}
    Number of related items per row,
    and number of rows.
  {% endcomment %}

  {% assign number_of_related_products_per_row = section.settings.related_grid_num %}
  {% assign number_of_rows = section.settings.related_grid_row %}

  {% comment %}
    Heading.
    Leave blank if you don't need one.
  {% endcomment %}

  {% assign heading = section.settings.related_title %}

  {% comment %}
    Set either or both to true, if you want
    to limit yourself to items with same vendor, and/or type.
  {% endcomment %}

  {% assign same_vendor = false %}
  {% assign same_type = false %}

  {% comment %}
    Collections to ignore.
    Never pick related items from those.
  {% endcomment %}

  {% assign exclusions = 'frontpage,all' | split: ',' %}

  {% comment %}
    Looking for a relevant collection.
  {% endcomment %}

  {% if product.metafields.c_f['Related Products'] %}
    {% assign collection = collections[product.metafields.c_f['Related Products']] %}
  {% endif %}

  {% assign found_a_collection = false %}
  {% if collection and collection.all_products_count > 1 %}
    {% unless exclusions contains collection.handle %}
      {% assign found_a_collection = true %}
    {% endunless %}
  {% endif %}
  {% unless found_a_collection %}
    {% for c in product.collections %}
      {% unless exclusions contains c.handle or c.all_products_count < 2 %}
        {% assign found_a_collection = true %}
        {% assign collection = c %}
        {% break %}
      {% endunless %}
    {% endfor %}
  {% endunless %}

  {% comment %}
    If we have a relevant collection.
  {% endcomment %}

  {% if found_a_collection %}

    {% assign counter = 0 %}
    {% assign break_at = number_of_rows | times: number_of_related_products_per_row %}
    {% assign current_product = product %}
    
    {% case number_of_related_products_per_row %}
      {% when '1' %}
        {% assign grid_item_width = '' %}
      {% when '2' %}
        {% assign grid_item_width = 'medium-up--one-half large-up--one-half' %}
      {% when '3' %}
        {% assign grid_item_width = 'medium-up--one-half large-up--one-third' %}
      {% when '4' %}
        {% assign grid_item_width = 'small--one-half medium-up--one-quarter' %}
      {% when '5' %}
        {% assign grid_item_width = 'small--one-half medium-up--one-third large-up--one-fifth' %}
      {% when '6' %}
        {% assign grid_item_width = 'small--one-half medium-up--one-third large-up--one-sixth' %}
      {% else %}
        {% assign grid_item_width = 'medium--one-third large--one-quarter' %}
    {% endcase %}



    {% capture related_items %}
    {% assign coll_products = collection.products | sort: 'best-selling' %}
    
    {% for product in coll_products limit: 7  %}
      {% assign product_tags_string = product.tags | join: ',' %}
      {% unless product_tags_string contains 'RX LENSES' %}
        {% unless product.handle == current_product.handle %}
          {% unless same_vendor and current_product.vendor != product.vendor %}
            {% unless same_type and current_product.type != product.type %}
              {% unless product.vendor == "Extend" or product.title contains "Shipping Insurance" %}
                <div class="grid__item {{ grid_item_width }}{% if sold_out %} sold-out{% endif %}{% if on_sale %} on-sale{% endif %}{% if forloop.last %} last{% endif %}">
                  <div class="product-wrapper">
                    {% include 'new-product-card' %}
                  </div>
                </div>
                {% assign counter = counter | plus: 1 %}
                {% if counter == break_at %}
                    {% break %}
                {% endif %}
              {% endunless %}
            {% endunless %}
          {% endunless %}
        {% endunless %}
      {% endunless %}
    {% endfor %}
    {% endcapture %}

    {% assign related_items = related_items | trim %}

    {% unless related_items == blank %}

    <aside class="grid">
      <div class="grid__item">
        {% unless heading == blank %}
        <header class="section-header">
          <h2 class="section-header__title">{{ heading }}</h1>
        </header>
        {% endunless %}
        <div class="grid-uniform related-slider">
          {{ related_items }}
        </div>
      </div>
    </aside>

    {% endunless %}
      
  {% endif %}
    
  </div>
</div>
{% endif %}

<script  type="lazyload2">
  $(function(){
    $(".new-product-card .variant-item").hover(function(){
      let s = $(this).attr('data-img');
      let p = $(this).parents('.new-product-card');
      p.find('.product-card__image-wrap img').attr('src',s);
    });
    let uniProduct_thmub = [];
    $('.new-product-card .variants-wrapper').each(function(){
      let $this = $(this);
      $this.find('.variant-item').each(function(){
        let img = $(this).attr('data-img');
        if(uniProduct_thmub.indexOf(img) == -1){
          uniProduct_thmub.push(img)
        }else{
          $(this).remove()
        }
      })
    })
    $('.related-slider').slick({
      infinite: true,
      slidesToShow: 4,
      slidesToScroll: 4,
       responsive: [
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 2,
            dots:true,
            slidesToScroll: 2
          }
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1,
            centerMode: true,
            dots:true,
            centerPadding: '70px'
          }
        }
    // You can unslick at a given breakpoint now by adding:
    // settings: "unslick"
    // instead of a settings object
      ]
    });
  })
</script>


{% schema %} 
{
  "name": "Related products",
  "class":"related-products__section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_related_products",
      "label": "Show related products",
      "default": false
    },
    {
      "id": "related_title",
      "type": "text",
      "label": "Section title",
      "default": "Other fine products"
    }
  ]
}
{% endschema %}



